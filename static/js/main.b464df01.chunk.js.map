{"version":3,"sources":["AlignHelper.jsx","TweenableMesh.jsx","Scene.jsx","App.js","serviceWorker.js","index.js"],"names":["AlignHelper","deltaVec","amountVec","THREE","totalCount","count","cur","num","alternateRows","this","x","y","z","o","i","push","getNextPosition","center","clone","divideScalar","sub","Error","p","multiply","prototype","getMatrixAt","index","m","instanceMatrix","array","TweenableMesh","scene","meshes","arrangement","scale","qTweens","qTweensMap","posTweens","posTweensMap","dummy","initialArrangement","models","length","amount","g","geometry","im","material","add","j","matrix","set","updateMatrix","setMatrixAt","needsUpdate","tweens","map","idx","Math","floor","random","c","target","position","targetRot","rotation","Scene","props","TWEENS_NUM","ITEM_ROWS_NUM","ITEM_COLS_NUM","JUMP_HEIGHT","JUMP_DURATION","ROT_DURATION","PIXEL_RATIO_FACTOR","start","bind","stop","animate","document","title","width","mount","clientWidth","height","clientHeight","camera","lookAt","renderer","antialias","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","appendChild","domElement","GLTFLoader","load","gltf","onModelLoaded","undefined","error","light","light2","orbitControl","OrbitControls","zoomSpeed","stats","Stats","body","dom","addEventListener","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","arrangeCountVec","gapVec","getPositions","rot6","PI","children","rotateX","rotateY","pos","randomDue","tween","createjs","get","loop","wait","to","quadInOut","eul","qTween","getBackInOut","duration","setPositionTweens","setQuaternionTweens","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","begin","renderScene","update","end","render","style","overflow","ref","React","Component","App","className","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b464df01.chunk.js","sourcesContent":["import * as THREE from 'three'\r\n\r\nclass AlignHelper  {\r\n    \r\n    deltaVec = new THREE.Vector3(1,0,1);\r\n    totalCount = 0;\r\n    count = 0;\r\n    cur = new THREE.Vector3();\r\n    num = new THREE.Vector3();\r\n    alternateRows = true;\r\n  \r\n    constructor(deltaVec, amountVec) {\r\n        this.num = amountVec;\r\n        this.deltaVec = deltaVec;\r\n        this.totalCount = amountVec.x * amountVec.y * amountVec.z;\r\n    }\r\n\r\n    getPositions() {\r\n        let o = [];\r\n        for (let i = 0 ; i < this.totalCount ; i++) {\r\n            o.push(this.getNextPosition());\r\n        }\r\n        \r\n        // center array\r\n        const center = o[this.totalCount - 1].clone().divideScalar(2);\r\n        \r\n        for (let i = 0 ; i < this.totalCount ; i++) {\r\n            \r\n            o[i] = o[i].clone().sub(center);\r\n\r\n            if (this.alternateRows === true && (i % 2 === 0)) \r\n            {\r\n                o[i] = o[i].clone().sub(new THREE.Vector3(0,0,this.deltaVec.z/2));// this.cur.sub(new THREE.Vector3(0,0,this.deltaVec.z/2));\r\n            }\r\n\r\n            \r\n        }\r\n        return o;\r\n    }\r\n    getNextPosition() {\r\n        if (this.count++ > this.totalCount) {\r\n            throw new Error(\"Maximum instances reached\");\r\n        }\r\n        let p = new THREE.Vector3();\r\n\r\n        p = this.deltaVec.clone().multiply(this.cur);\r\n        \r\n\r\n        if (++this.cur.x < this.num.x) {\r\n        }\r\n        else {\r\n            this.cur.x = 0;\r\n            this.cur.y++;\r\n        }\r\n\r\n        if (this.cur.y < this.num.y) {\r\n\r\n        }\r\n        else {\r\n            this.cur.y = 0;\r\n            this.cur.z++;\r\n        }\r\n       return p; \r\n    }\r\n}\r\n \r\nexport default AlignHelper;","import * as THREE from 'three'\r\n\r\nTHREE.InstancedMesh.prototype.getMatrixAt = function (index) {\r\n    let m = [];\r\n    m[0] = this.instanceMatrix.array[index * 16];\r\n    m[1] = this.instanceMatrix.array[index * 16 + 1];\r\n    m[2] = this.instanceMatrix.array[index * 16 + 2];\r\n    m[3] = this.instanceMatrix.array[index * 16 + 3];\r\n    return m;\r\n}\r\n\r\nclass TweenableMesh {\r\n    scale = new THREE.Vector3(1, 1, 1);\r\n \r\n    meshes = [];\r\n\r\n    qTweens = []\r\n    qTweensMap = []\r\n    posTweens = []\r\n    posTweensMap = [];\r\n    dummy = new THREE.Object3D();\r\n    initialArrangement = [];\r\n    constructor(scene, meshes, arrangement) {\r\n        const models = meshes.length ? meshes : [meshes]\r\n \r\n        this.amount = arrangement.length;\r\n        \r\n        this.initialArrangement = arrangement;\r\n\r\n        let g = new THREE.Group();\r\n\r\n        \r\n        for (let i = 0; i < models.length; i++) {\r\n            // operate on clone\r\n            const m = models[i].geometry.clone();\r\n            \r\n            let im = new THREE.InstancedMesh(\r\n                m,\r\n                models[i].material.clone(),\r\n                this.amount\r\n            );\r\n            g.add(im);\r\n            this.meshes.push(im);\r\n        }\r\n\r\n        scene.add(g);\r\n    }\r\n\r\n    setScale(scale) {\r\n        this.scale = new THREE.Vector3(scale, scale, scale);\r\n\r\n        for (let i = 0; i < this.meshes.length; i++) {\r\n            for (let j = 0; j < this.amount; j++) {\r\n                var m = this.meshes[i].getMatrixAt(j);\r\n                this.dummy.matrix.set(m)\r\n                this.dummy.scale.set(this.scale.x, this.scale.y, this.scale.z)\r\n                this.dummy.updateMatrix();\r\n                this.meshes[i].setMatrixAt(j, this.dummy.matrix)\r\n            }\r\n            this.meshes[i].instanceMatrix.needsUpdate = true;\r\n        }\r\n\r\n    }\r\n\r\n    setPositionTweens(tweens, map) {\r\n        this.posTweens = tweens;\r\n\r\n        this.posTweensMap = [];\r\n        for (let i = 0; i < this.amount && tweens.length > 0; i++) {\r\n            let idx;\r\n            if (map) {\r\n                idx = map[i];\r\n            }\r\n            else {\r\n                idx = Math.floor(Math.random() * 50) % tweens.length;\r\n            }\r\n            this.posTweensMap.push(idx)\r\n        }\r\n    }\r\n\r\n\r\n    setQuaternionTweens(tweens) {\r\n        this.qTweens = tweens;\r\n        this.qTweensMap = [];\r\n        for (let i = 0; i < this.amount && tweens.length > 0; i++) {\r\n            const idx = Math.floor(Math.random() * 50) % tweens.length;\r\n            this.qTweensMap.push(idx)\r\n        }\r\n    } \r\n\r\n    update() {\r\n        if (this.initialArrangement.length !== this.amount) {\r\n            throw new Error(\"Instances number mismatch\")\r\n        }\r\n        for (var i = 0; i < this.meshes.length; i++) {\r\n            for (var j = 0; j < this.amount; j++) {\r\n                // position\r\n                this.dummy.matrix.set(this.meshes[i].getMatrixAt(j));\r\n                this.dummy.updateMatrix();\r\n            \r\n                if (this.posTweensMap.length > 0) {\r\n                    const c = this.initialArrangement[j].clone().add(this.posTweens[this.posTweensMap[j]].target);\r\n                    this.dummy.position.set(c.x, c.y, c.z);\r\n                }\r\n\r\n                // rotations\r\n                if (this.qTweensMap.length > 0) {\r\n                    const targetRot = this.qTweens[this.qTweensMap[j]].target\r\n\r\n                    this.dummy.rotation.x = targetRot.x;\r\n                    this.dummy.rotation.y = targetRot.y;\r\n                    this.dummy.rotation.z = targetRot.z;\r\n                }\r\n                this.dummy.updateMatrix();\r\n                this.meshes[i].setMatrixAt(j, this.dummy.matrix)\r\n            }\r\n            this.meshes[i].instanceMatrix.needsUpdate = true\r\n        }\r\n    }\r\n}\r\n\r\nexport default TweenableMesh;","import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport Stats from 'stats-js';\r\nimport * as createjs from 'createjs-module';\r\nimport AlignHelper from './AlignHelper';\r\nimport TweenableMesh from './TweenableMesh';\r\nimport { AxesHelper } from 'three';\r\n\r\nclass Scene extends React.Component {\r\n\r\n    TWEENS_NUM = 30;\r\n    ITEM_ROWS_NUM = 18;\r\n    ITEM_COLS_NUM = 10;\r\n    JUMP_HEIGHT = 2;\r\n    JUMP_DURATION = 1000;\r\n    ROT_DURATION = 2000;\r\n    PIXEL_RATIO_FACTOR = 2;\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.start = this.start.bind(this)\r\n        this.stop = this.stop.bind(this)\r\n        this.animate = this.animate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // set title\r\n        document.title = \"BUCK joe_ryba's art in threejs\"\r\n        const width = this.mount.clientWidth\r\n        const height = this.mount.clientHeight\r\n\r\n        const scene = new THREE.Scene()\r\n        const camera = new THREE.PerspectiveCamera(\r\n            22,\r\n            width / height,\r\n            0.01,\r\n            1000\r\n        )\r\n        camera.position.set( 9.520364644833174, 5.164962376737971, 12.35157275260960);\r\n        // camera.position.set(-40, 10, 20);\r\n        camera.lookAt(0, 0, 0);\r\n\r\n        // const ah = new AxesHelper(2);\r\n        // scene.add(ah)\r\n\r\n        const renderer = new THREE.WebGLRenderer({ antialias: true })\r\n        renderer.setPixelRatio(window.devicePixelRatio / this.PIXEL_RATIO_FACTOR);\r\n        // set background color\r\n        renderer.setClearColor('#bbbbbb', 1);\r\n\r\n        renderer.setSize(width, height)\r\n\r\n        this.scene = scene\r\n        this.camera = camera\r\n        this.renderer = renderer\r\n        this.mount.appendChild(this.renderer.domElement)\r\n\r\n        // load models\r\n        var loader = new GLTFLoader();\r\n        loader.load('nut.glb',\r\n            (gltf) => this.onModelLoaded(gltf),\r\n            undefined,\r\n            function (error) {\r\n                throw error\r\n            });\r\n\r\n        // set up lights\r\n        const light = new THREE.PointLight(0xffffff);\r\n        light.position.set(8, 50, -10);\r\n        this.scene.add(light);\r\n\r\n        const light2 = new THREE.PointLight(0xffeeff);\r\n        light2.position.set(2, 50, 10);\r\n        this.scene.add(light2);\r\n\r\n        this.start()\r\n\r\n        this.orbitControl = new OrbitControls(camera, renderer.domElement);\r\n        this.orbitControl.zoomSpeed = 5.0;\r\n \r\n\r\n        this.stats = new Stats();\r\n        document.body.appendChild(this.stats.dom);\r\n        window.addEventListener('resize', () => this.onWindowResize(), false);\r\n    }\r\n\r\n\r\n    onWindowResize() {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    onModelLoaded(gltf) {\r\n        const arrangeCountVec = new THREE.Vector3(this.ITEM_ROWS_NUM, 1, this.ITEM_COLS_NUM);    // how many instances in each axis\r\n        const gapVec = new THREE.Vector3(0.65, 0, 2);\r\n        const alignHelper = new AlignHelper(gapVec, arrangeCountVec);\r\n        const arrangement = alignHelper.getPositions();\r\n        const fRot = Math.PI * 2;\r\n        const rot6 = fRot / 6;\r\n        \r\n\r\n        let models = gltf.scene.children[0].children;\r\n        for (let i = 0 ; i < models.length ; i++) {\r\n            models[i].geometry.rotateX(Math.PI / 2);\r\n            models[i].geometry.rotateY(Math.PI / 2);\r\n            models[i].geometry.rotateX(rot6/2);\r\n        }\r\n        this.models = new TweenableMesh(this.scene, models, arrangement);\r\n        \r\n        const tweens = []\r\n        const qTweens = []\r\n        const dir = 1;//Math.random() >0.5 ? 1 : -1;\r\n\r\n        for (var i = 0; i < this.TWEENS_NUM ; i++) {\r\n            var pos = new THREE.Vector3();\r\n            const randomDue = Math.random() * 2000;\r\n           \r\n            // animate every other item\r\n            // if (0 === 0) {\r\n                const tween = createjs.Tween.get(pos, { loop: true })\r\n                .wait(randomDue)\r\n                .to({ y: this.JUMP_HEIGHT }, this.JUMP_DURATION, createjs.Ease.quadInOut)\r\n                .wait(2000)\r\n                .to({ y: 0 }, this.JUMP_DURATION, createjs.Ease.quadInOut)\r\n                .wait(2000 - randomDue);\r\n                tweens.push(tween);\r\n            // }\r\n            // else {\r\n            //     tweens.push(createjs.Tween.get(pos, {loop: true}).to({x:0},100));\r\n            // }\r\n            // animate rotation\r\n            let eul = new THREE.Euler()\r\n            const qTween = createjs.Tween.get(eul, { loop: true })\r\n                .wait(1500)\r\n                // .wait(1500)\r\n                .to({ x: 4 * dir * rot6 }, this.ROT_DURATION, createjs.Ease.getBackInOut(0.5))\r\n                .wait(1500 - randomDue);\r\n            \r\n            // sync duration of both tweens\r\n            if (tween.duration > qTween.duration) {\r\n                qTween.wait(tween.duration - qTween.duration)\r\n            }\r\n            else {\r\n                tween.wait(qTween.duration - tween.duration)\r\n            }\r\n            qTweens.push(qTween)\r\n        }\r\n        this.models.setPositionTweens(tweens);\r\n        this.models.setQuaternionTweens(qTweens);\r\n\r\n    }\r\n \r\n    componentWillUnmount() {\r\n        this.stop()\r\n        this.mount.removeChild(this.renderer.domElement)\r\n    }\r\n \r\n    start() {\r\n        if (!this.frameId) {\r\n            this.frameId = requestAnimationFrame(this.animate)\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        cancelAnimationFrame(this.frameId)\r\n    }\r\n\r\n    animate() {\r\n        this.stats.begin();\r\n        this.renderScene();\r\n        if (this.models) {\r\n            this.models.update();\r\n        }\r\n        // console.log(this.camera.position)\r\n        this.orbitControl.update();\r\n        this.stats.end()\r\n        this.frameId = window.requestAnimationFrame(this.animate)\r\n    }\r\n\r\n    renderScene() {\r\n        this.renderer.render(this.scene, this.camera)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{ width: '100%', height: '100vh', overflow: 'hidden' }}\r\n                ref={(mount) => { this.mount = mount }}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Scene;","import React from 'react';\nimport Scene from './Scene';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Scene/>  \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}